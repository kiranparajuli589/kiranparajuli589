import {
  IN_BROWSER,
  templateRef
} from "./chunk-MNFGPC62.js";
import {
  onBeforeUnmount,
  readonly,
  ref,
  watch
} from "./chunk-XMG6LDPM.js";

// node_modules/.pnpm/vuetify@3.7.2_typescript@5.2.2_vite-plugin-vuetify@2.0.4_vue@3.3.4/node_modules/vuetify/lib/composables/resizeObserver.mjs
function useResizeObserver(callback) {
  let box = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "content";
  const resizeRef = templateRef();
  const contentRect = ref();
  if (IN_BROWSER) {
    const observer = new ResizeObserver((entries) => {
      callback == null ? void 0 : callback(entries, observer);
      if (!entries.length) return;
      if (box === "content") {
        contentRect.value = entries[0].contentRect;
      } else {
        contentRect.value = entries[0].target.getBoundingClientRect();
      }
    });
    onBeforeUnmount(() => {
      observer.disconnect();
    });
    watch(() => resizeRef.el, (newValue, oldValue) => {
      if (oldValue) {
        observer.unobserve(oldValue);
        contentRect.value = void 0;
      }
      if (newValue) observer.observe(newValue);
    }, {
      flush: "post"
    });
  }
  return {
    resizeRef,
    contentRect: readonly(contentRect)
  };
}

export {
  useResizeObserver
};
//# sourceMappingURL=chunk-6TAUYRAI.js.map
